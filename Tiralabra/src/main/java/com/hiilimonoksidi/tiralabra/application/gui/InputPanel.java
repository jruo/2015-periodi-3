package com.hiilimonoksidi.tiralabra.application.gui;

import com.hiilimonoksidi.tiralabra.misc.Point;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * Paneeli, jossa käyttäjä valitsee syötekuvan ja aloitus- ja lopetuspisteet.
 *
 * @author Janne Ruoho
 */
public class InputPanel extends JPanel {

    private MainWindow mainWindow;

    public InputPanel(MainWindow mainWindow) {
        this.mainWindow = mainWindow;
        initComponents();
        addCanvasListeners();
    }

    /**
     * Lisää kuuntelijat.
     */
    private void addCanvasListeners() {
        inputImageCanvas.setPointChangedListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Point start = inputImageCanvas.getStart();
                Point end = inputImageCanvas.getEnd();
                if (start != null) {
                    jLabelStart.setText("Start point: " + start.x + ", " + start.y);
                } else {
                    jLabelStart.setText("Start point: Select start point with left click");
                }
                if (end != null) {
                    jLabelEnd.setText("End point: " + end.x + ", " + end.y);
                } else {
                    jLabelEnd.setText("End point: Select end point with right click");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelTop = new javax.swing.JPanel();
        jLabelInput = new javax.swing.JLabel();
        jTextFieldInput = new javax.swing.JTextField();
        jButtonBrowse = new javax.swing.JButton();
        jLabelWidth = new javax.swing.JLabel();
        jLabelHeight = new javax.swing.JLabel();
        jPanelBottom = new javax.swing.JPanel();
        jButtonStart = new javax.swing.JButton();
        jPanelMiddle = new javax.swing.JPanel();
        jScrollPaneImage = new javax.swing.JScrollPane();
        jPanelCanvasContainer = new javax.swing.JPanel();
        inputImageCanvas = new com.hiilimonoksidi.tiralabra.application.gui.InputImageCanvas();
        jLabelStart = new javax.swing.JLabel();
        jLabelEnd = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanelTop.setLayout(new java.awt.GridBagLayout());

        jLabelInput.setText("Input image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 0);
        jPanelTop.add(jLabelInput, gridBagConstraints);

        jTextFieldInput.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 10);
        jPanelTop.add(jTextFieldInput, gridBagConstraints);

        jButtonBrowse.setText("Browse...");
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 10);
        jPanelTop.add(jButtonBrowse, gridBagConstraints);

        jLabelWidth.setText("Width:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanelTop.add(jLabelWidth, gridBagConstraints);

        jLabelHeight.setText("Height:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 0);
        jPanelTop.add(jLabelHeight, gridBagConstraints);

        add(jPanelTop, java.awt.BorderLayout.PAGE_START);

        jPanelBottom.setLayout(new java.awt.GridBagLayout());

        jButtonStart.setText("Next");
        jButtonStart.setMargin(new java.awt.Insets(10, 14, 10, 14));
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelBottom.add(jButtonStart, gridBagConstraints);

        add(jPanelBottom, java.awt.BorderLayout.PAGE_END);

        jPanelMiddle.setLayout(new java.awt.GridBagLayout());

        jPanelCanvasContainer.setLayout(new java.awt.GridBagLayout());
        jPanelCanvasContainer.add(inputImageCanvas, new java.awt.GridBagConstraints());

        jScrollPaneImage.setViewportView(jPanelCanvasContainer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanelMiddle.add(jScrollPaneImage, gridBagConstraints);

        jLabelStart.setText("Start point: Select start point with left click");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 10);
        jPanelMiddle.add(jLabelStart, gridBagConstraints);

        jLabelEnd.setText("End point: Select end point with right click");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 10);
        jPanelMiddle.add(jLabelEnd, gridBagConstraints);

        add(jPanelMiddle, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
        loadImage();
    }//GEN-LAST:event_jButtonBrowseActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        mainWindow.setPanel(new AlgorithmTestingPanel(inputImageCanvas.getImage(),
                                                      inputImageCanvas.getStart(),
                                                      inputImageCanvas.getEnd()));
    }//GEN-LAST:event_jButtonStartActionPerformed

    /**
     * Näyttää tiedostonavausikkunan ja lataa käyttäjän haluaman kuvan
     * InputImageCanvasille.
     */
    private void loadImage() throws HeadlessException {
        JFileChooser chooser = new JFileChooser(System.getProperty("user.dir"));
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                BufferedImage image = ImageIO.read(file);
                inputImageCanvas.setImage(image);
                jTextFieldInput.setText(file.getAbsolutePath());
                jLabelWidth.setText("Width: " + image.getWidth() + " px");
                jLabelHeight.setText("Height: " + image.getHeight() + " px");
                jLabelStart.setText("Start point: Select start point with left click");
                jLabelEnd.setText("End point: Select end point with right click");
            } catch (IOException | NullPointerException ex) {
                JOptionPane.showMessageDialog(this, "Could not read image file", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hiilimonoksidi.tiralabra.application.gui.InputImageCanvas inputImageCanvas;
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JLabel jLabelEnd;
    private javax.swing.JLabel jLabelHeight;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JLabel jLabelStart;
    private javax.swing.JLabel jLabelWidth;
    private javax.swing.JPanel jPanelBottom;
    private javax.swing.JPanel jPanelCanvasContainer;
    private javax.swing.JPanel jPanelMiddle;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPaneImage;
    private javax.swing.JTextField jTextFieldInput;
    // End of variables declaration//GEN-END:variables
}
